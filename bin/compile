#!/usr/bin/env bash
#
# compile
# Copyright (C) 2017 dhilipsiva <dhilipsiva@gmail.com>
#
# Distributed under terms of the MIT license.
#

# Usage:
#
#     $ bin/compile <build-dir> <cache-dir> <env-path>
#
# ./bin/compile $BUILD_DIR $CACHE_DIR $ENV_DIR

set -exo pipefail

# Paths.
export BIN_DIR=$(cd $(dirname $0); pwd) # absolute path
export ROOT_DIR=$(dirname $BIN_DIR)
export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

echo "
===============================================================================
BUILD_DIR $BUILD_DIR
ROOT_DIR $ROOT_DIR
CACHE_DIR $CACHE_DIR
ENV_DIR $ENV_DIR
BIN_DIR $BIN_DIR
===============================================================================
"

# Sanitizing environment variables.
# unset GIT_DIR PYTHONHOME PYTHONPATH
# unset RECEIVE_DATA RUN_KEY BUILD_INFO DEPLOY LOG_TOKEN DYNO

# Switch to the repo's context.
cd "$BUILD_DIR"

# Load Variables
source "$BIN_DIR/constants"

# Syntax sugar.
source "$BIN_DIR/utils"

# Cache Restore
source "$BIN_DIR/steps/cache-restore"

# Make Directories if it does not exist
source "$BIN_DIR/steps/make-dirs"

# Install APT Dependencies.
source "$BIN_DIR/steps/apt"

# Install gettext Dependencies.
source "$BIN_DIR/steps/gettext"

# Install Python.
source "$BIN_DIR/steps/python"

# Install pango.
source "$BIN_DIR/steps/pango"

# Install Crypto.
#source "$BIN_DIR/steps/cryptography"

# Install Gettext.
source "$BIN_DIR/steps/gettext"

# Install Libjpeg.
source "$BIN_DIR/steps/libjpeg"

# Install dependencies with Pip (where the magic happens).
source "$BIN_DIR/steps/pip-install"

# Django collectstatic support.
# sub-env $BIN_DIR/steps/collectstatic  # Why `sub-env`???
source "$BIN_DIR/steps/django"

# Set Env variables
source "$BIN_DIR/steps/set-envs"

# Backup Cache
source "$BIN_DIR/steps/cache-backup"
